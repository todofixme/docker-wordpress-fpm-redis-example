# FastCGI cache storage
fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=WORDPRESS:100m inactive=60m max_size=1g use_temp_path=off;

# Never cache non-idempotent methods
map $request_method $nocache_method { default ""; ~^(POST|PUT|PATCH|DELETE)$ 1; }

# Allow manual cache bypass via ?nocache=1
map $arg_nocache $nocache_arg { default ""; 1 1; }

# Skip cache if cookies indicate personalized content (logged-in users, comments, WooCommerce)
map $http_cookie $skip_cache_cookie {
    default "";
    ~*wordpress_logged_in_ 1;
    ~*comment_author       1;
    ~*wp-postpass_         1;
    ~*woocommerce_items_in_cart 1;
    ~*woocommerce_cart_hash     1;
    ~*wp_woocommerce_session_   1;
}

# Skip cache for admin, login, REST, cron, elementor editor/preview, search, cart/checkout
map $request_uri $skip_cache_uri {
    default "";
    ~^/wp-admin/      1;
    ~^/wp-login\.php  1;
    ~^/wp-json/       1;
    ~^/xmlrpc\.php    1;
    ~^/wp-cron\.php   1;
    ~^/cart/          1; 
    ~^/checkout/      1;
    ~^/my-account/    1;
    ~^/warenkorb/     1;
    ~^/kasse/         1;
    ~^/mein-konto/    1;
    ~*elementor       1;      # Elementor editor/preview
    ~*preview=true    1;      # WordPress previews
    ~^/search         1;      # Search pages
}

# Combined on/off switch for cache (empty string = allow cache; "1" = bypass)
map "$skip_cache_cookie$skip_cache_uri" $skip_cache { default ""; ~1 1; }

server {
    listen 80;
    listen [::]:80;
    server_name $host;

    root /var/www/html;
    index index.php index.html index.htm;

    server_tokens off;
    client_max_body_size 75M;

    # Access and error logs
    access_log /var/log/nginx/wordpress.access.log;
    error_log  /var/log/nginx/wordpress.error.log;

    # Optional security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Debug headers: cache status and why it was bypassed
    add_header X-Cache   $upstream_cache_status always;
    add_header X-NoCache "$skip_cache$nocache_method$nocache_arg" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Block PHP execution in uploads
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    # Block dangerous file types in uploads
    location ~* ^/wp-content/uploads/.*\.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
    }

    # Block access to sensitive files
    location ~* ^/(wp-config\.php|readme\.html|license\.txt|wp-config-sample\.php)$ {
        deny all;
    }

    # Block wp-includes PHP files
    location ~* ^/wp-includes/.*\.php$ {
        deny all;
    }

    location ~ \.php$ {
        # Serve only existing PHP files
        try_files $uri =404;

        # PHP-FPM upstream
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # FastCGI cache settings
        fastcgi_cache WORDPRESS;
        fastcgi_cache_methods GET HEAD;                        # be explicit
        fastcgi_cache_key "$scheme$request_method$host$request_uri";
        fastcgi_cache_valid 200 301 302 10m;                  # TTL for successful responses/redirects
        fastcgi_cache_valid 404 1m;

        # Bypass / do not cache when any of these are non-empty
        fastcgi_cache_bypass $skip_cache $nocache_method $nocache_arg;
        fastcgi_no_cache     $skip_cache $nocache_method $nocache_arg;

        # Improve stability under load
        fastcgi_cache_lock on;
        fastcgi_cache_lock_timeout 5s;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500 http_503;
    }

    # Serve static assets directly without PHP
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|zip|tar|t?gz|mp3|wav|swf|woff|woff2|ttf|eot|svg)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Deny access to hidden files
    location ~ /\.ht {
        deny all;
    }

    # Small convenience locations
    location = /favicon.ico { log_not_found off; access_log off; }
    location = /favicon.svg { log_not_found off; access_log off; }
    location = /robots.txt  { log_not_found off; access_log off; allow all; }
}
